/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;
import java.sql.*;
import clases.Conexion;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
/**
 *
 * @author N3mesis
 */
public class InformacionUsuarios extends javax.swing.JFrame {
    //user_update = servirá para recuperar la seleccion del usuario q haya sido seleccionada
    String user ="", user_update ="";
    int ID;
    /**
     * Creates new form InformacionUsuarios
     */
    public InformacionUsuarios() {
        initComponents();
        //Centrar la interfaz al ejecutar
        //Almacenamos el usuario de la clase login en la variable user
        user = login.user;
        //Desde la interfaz gestionar usuarios, guardamos el dato que haya sido seleccionado
        //en la variable user_update
        user_update = GestionarUsuarios.user_update;
        //Definimos tamaño
        setSize(630, 450);
        setResizable(false);
        setTitle("Informacion de usuario " + user_update + " - Sesion de " + user);
        setLocationRelativeTo(null);
        //Nos permite evitar que el programa finalice cuando esta interfaz finalice
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        ImageIcon fondo = new ImageIcon("src/images/wallpaperPrincipal.jpg");
        //creamos nuevo objeto para definir las dimesiones de la imagen
        //y se ajusten a nuestro JLabel
        Icon icono = new ImageIcon(fondo.getImage().getScaledInstance(jbl_wallpaper.getWidth(), 
                jbl_wallpaper.getHeight(), Image.SCALE_DEFAULT));
        //colocar la imagen que estamos escalando dentro del jlabel
        jbl_wallpaper.setIcon(icono);
        this.repaint();
        
        jbl_titulo.setText("Informacion del usuario " + user_update);
        
        try {
            //establecemos la conexion a la BD
            //creamos el objeto cn de la clase connection que sea igual al metodo conectar 
            //de la clase conexion
            Connection cn = Conexion.conectar();
            //Creamos el objeto pst de la clase preparedstatement
            //Aquí programamos la instruccion a la BD
            PreparedStatement pst = cn.prepareStatement(
                "select * from usuarios where username = '" + user_update + "'");
            //creamos el objeto rs de la clase resultSet
            ResultSet rs = pst.executeQuery();
            //programamos esta condicion para las veces que se cumpla la condicion
            if (rs.next()){
                //traemos el id y lo almacenamos en la variable ID
                ID = rs.getInt("idusuarios");
                //Asignamos a cada caja de texto el dato que existe en la BD
                txt_nombre.setText(rs.getString("nombre_usuario"));
                txt_mail.setText(rs.getString("email"));
                txt_telefono.setText(rs.getString("telefono"));
                txt_username.setText(rs.getString("username"));
                txt_registrado.setText(rs.getString("registrado_por"));
                cmb_niveles.setSelectedItem(rs.getString("tipo_nivel"));
                cmb_status.setSelectedItem(rs.getString("status"));
            }
            //Cerramos la conexion
            cn.close();
        } catch (SQLException e){
            System.out.println("Error al cargar usuario: "+ e);
            JOptionPane.showMessageDialog(null, "Error al cargar!, contacte al administrador." );
        }
    }
    
    @Override
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("images/icon.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbl_titulo = new javax.swing.JLabel();
        jbl_nombre = new javax.swing.JLabel();
        jbl_nombre1 = new javax.swing.JLabel();
        jbl_nombre2 = new javax.swing.JLabel();
        jbl_nombre3 = new javax.swing.JLabel();
        jbl_nombre4 = new javax.swing.JLabel();
        jbl_nombre5 = new javax.swing.JLabel();
        jbl_nombre6 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        txt_mail = new javax.swing.JTextField();
        txt_telefono = new javax.swing.JTextField();
        txt_username = new javax.swing.JTextField();
        txt_registrado = new javax.swing.JTextField();
        cmb_niveles = new javax.swing.JComboBox<>();
        cmb_status = new javax.swing.JComboBox<>();
        jButton_actualizar = new javax.swing.JButton();
        jButton_restaurarpass = new javax.swing.JButton();
        jLabel_footer = new javax.swing.JLabel();
        jbl_wallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbl_titulo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jbl_titulo.setForeground(new java.awt.Color(255, 255, 255));
        jbl_titulo.setText("Informacion de Usuario");
        getContentPane().add(jbl_titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        jbl_nombre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbl_nombre.setForeground(new java.awt.Color(255, 255, 255));
        jbl_nombre.setText("Nombre:");
        getContentPane().add(jbl_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        jbl_nombre1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbl_nombre1.setForeground(new java.awt.Color(255, 255, 255));
        jbl_nombre1.setText("Email:");
        getContentPane().add(jbl_nombre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jbl_nombre2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbl_nombre2.setForeground(new java.awt.Color(255, 255, 255));
        jbl_nombre2.setText("Telefono:");
        getContentPane().add(jbl_nombre2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        jbl_nombre3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbl_nombre3.setForeground(new java.awt.Color(255, 255, 255));
        jbl_nombre3.setText("Permisos de:");
        getContentPane().add(jbl_nombre3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        jbl_nombre4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbl_nombre4.setForeground(new java.awt.Color(255, 255, 255));
        jbl_nombre4.setText("Username:");
        getContentPane().add(jbl_nombre4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 50, -1, -1));

        jbl_nombre5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbl_nombre5.setForeground(new java.awt.Color(255, 255, 255));
        jbl_nombre5.setText("Status:");
        getContentPane().add(jbl_nombre5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 110, -1, -1));

        jbl_nombre6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbl_nombre6.setForeground(new java.awt.Color(255, 255, 255));
        jbl_nombre6.setText("Registrado por:");
        getContentPane().add(jbl_nombre6, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 170, -1, -1));

        txt_nombre.setBackground(new java.awt.Color(153, 153, 255));
        txt_nombre.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_nombre.setForeground(new java.awt.Color(255, 255, 255));
        txt_nombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_nombre.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 210, -1));

        txt_mail.setBackground(new java.awt.Color(153, 153, 255));
        txt_mail.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_mail.setForeground(new java.awt.Color(255, 255, 255));
        txt_mail.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_mail.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_mail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 210, -1));

        txt_telefono.setBackground(new java.awt.Color(153, 153, 255));
        txt_telefono.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_telefono.setForeground(new java.awt.Color(255, 255, 255));
        txt_telefono.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_telefono.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_telefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 210, -1));

        txt_username.setBackground(new java.awt.Color(153, 153, 255));
        txt_username.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_username.setForeground(new java.awt.Color(255, 255, 255));
        txt_username.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_username.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(txt_username, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 210, -1));

        txt_registrado.setBackground(new java.awt.Color(153, 153, 255));
        txt_registrado.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txt_registrado.setForeground(new java.awt.Color(255, 255, 255));
        txt_registrado.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_registrado.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_registrado.setEnabled(false);
        getContentPane().add(txt_registrado, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 190, 210, -1));

        cmb_niveles.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Capturista", "Tecnico" }));
        getContentPane().add(cmb_niveles, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        cmb_status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));
        getContentPane().add(cmb_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 130, -1, -1));

        jButton_actualizar.setBackground(new java.awt.Color(153, 153, 255));
        jButton_actualizar.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jButton_actualizar.setForeground(new java.awt.Color(255, 255, 255));
        jButton_actualizar.setText("Actualizar Usuario");
        jButton_actualizar.setBorder(null);
        jButton_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_actualizarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 250, 210, 35));

        jButton_restaurarpass.setBackground(new java.awt.Color(153, 153, 255));
        jButton_restaurarpass.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jButton_restaurarpass.setForeground(new java.awt.Color(255, 255, 255));
        jButton_restaurarpass.setText("Restaurar Password");
        jButton_restaurarpass.setBorder(null);
        jButton_restaurarpass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_restaurarpassActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_restaurarpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 300, 210, 35));

        jLabel_footer.setText("Practicando programación Java");
        getContentPane().add(jLabel_footer, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 390, -1, -1));
        getContentPane().add(jbl_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_actualizarActionPerformed
        // TODO add your handling code here:
        int permisos_cmb, status_cmb, validacion = 0;
        String nombre, mail, telefono, username, pass, permisos_string = "", status_string = "";
        
        mail = txt_mail.getText().trim();
        username = txt_username.getText().trim();
        nombre = txt_nombre.getText().trim();
        telefono = txt_telefono.getText().trim();
        permisos_cmb = cmb_niveles.getSelectedIndex()+1;
        status_cmb = cmb_status.getSelectedIndex()+1;
        
        if (mail.equals("")){
            txt_mail.setBackground(Color.RED);
            validacion++;
        }
        if (username.equals("")){
            txt_username.setBackground(Color.RED);
            validacion++;
        }
        if (nombre.equals("")){
            txt_nombre.setBackground(Color.RED);
            validacion++;
        }
        if (telefono.equals("")){
            txt_telefono.setBackground(Color.RED);
            validacion++;
        }
        //usamos la variable validacion
        if (validacion == 0){
            //cambiamos los datos que llegan desde el combobox. De numerico a texto
            if(permisos_cmb == 1){
                permisos_string = "Administracion";
            }else if (permisos_cmb == 2){
                permisos_string = "Capturista";
            }else if (permisos_cmb ==3){
                permisos_string = "Tecnico";
            }
            if(status_cmb == 1){
                status_string = "Activo";
            } else if(status_cmb ==2){
                status_string="Inactivo";
            }
            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        //Esta primera consulta es para que se consulte en la base de datos
                        //todos los registros que existan con ese username pero que no considere
                        //el que estamos modificando
                "select username from usuarios where username = '" + username + 
                        "' and not idusuarios = '" + ID + "'");
                
                ResultSet rs = pst.executeQuery();
                //En esta considicion se valida que el username a ingresar se encuentre disponible.
                //si la consulta anterior devuelve un registro quiere decir el usuarname no esta disponible
                if(rs.next()){
                    txt_username.setBackground(Color.RED);
                    JOptionPane.showMessageDialog(null, "Nombre de usuario no disponible");
                }else{
                    //si el username esta disponible entonces:
                    Connection cn2 = Conexion.conectar();
                    PreparedStatement pst2 = cn2.prepareStatement(
                            //Debe modificar los campos de la tabla usuario donde el ID del usuario
                            //sea exactamente el ID de la persona que estamos consultando
                    "update usuarios set nombre_usuario = ?, email =?, telefono=?, username = ?, "
                            + "tipo_nivel =?, status = ? where idusuarios = '" + ID + "'");
                    
                    pst2.setString(1, nombre);
                    pst2.setString(2, mail);
                    pst2.setString(3, telefono);
                    pst2.setString(4, username);
                    pst2.setString(5, permisos_string);
                    pst2.setString(6, status_string);
                    
                    //ejecutamos la actualizacion
                    pst2.executeUpdate();
                    cn2.close();
                    JOptionPane.showMessageDialog(null, "Modificacion Correcta");
                }
            }catch (SQLException e) {
                System.out.println("Error al actualizar." + e);
            }
        }else {
            JOptionPane.showMessageDialog(null, "Debes completar todos los campos");
        }
                
    }//GEN-LAST:event_jButton_actualizarActionPerformed

    private void jButton_restaurarpassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_restaurarpassActionPerformed
        // TODO add your handling code here:
        RestaurarPass restarpass = new RestaurarPass();
        restarpass.setVisible(true);
    }//GEN-LAST:event_jButton_restaurarpassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InformacionUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InformacionUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InformacionUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InformacionUsuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InformacionUsuarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmb_niveles;
    private javax.swing.JComboBox<String> cmb_status;
    private javax.swing.JButton jButton_actualizar;
    private javax.swing.JButton jButton_restaurarpass;
    private javax.swing.JLabel jLabel_footer;
    private javax.swing.JLabel jbl_nombre;
    private javax.swing.JLabel jbl_nombre1;
    private javax.swing.JLabel jbl_nombre2;
    private javax.swing.JLabel jbl_nombre3;
    private javax.swing.JLabel jbl_nombre4;
    private javax.swing.JLabel jbl_nombre5;
    private javax.swing.JLabel jbl_nombre6;
    private javax.swing.JLabel jbl_titulo;
    private javax.swing.JLabel jbl_wallpaper;
    private javax.swing.JTextField txt_mail;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_registrado;
    private javax.swing.JTextField txt_telefono;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
